# Explique o funcionamento dos algoritmos abaixo. 
# Este problema não envolve código. 
# Porém, fique à vontade para usar código conforme achar necessário.

# Bubblesort
# Insersort
# Mergesort

Bubblesort:
O Bubblesort é um algoritmo de ordenação. 
Ele é como quando você tem uma lista de números desordenados e deseja colocá-los em ordem. 
Você começa no início da lista e compara o primeiro número com o próximo. 
Se o primeiro for maior que o próximo, você os troca de lugar. 
Você faz isso para todos os pares de números na lista até que nenhuma troca seja necessária durante 
uma passagem completa. 
Em seguida, você repete esse processo até que a lista esteja completamente ordenada. 
O Bubblesort não é a maneira mais rápida de fazer isso, mas é fácil de entender.
Sua Complexidade: Tem uma eficiência média e pior caso de O(n^2)

Insertion Sort:
O Insertion Sort é um algoritmo de ordenação, ele trabalha inserindo cada elemento no local 
apropriado em relação aos elementos já ordenados.
É um algoritmo de ordenação simples e eficaz para listas pequenas ou parcialmente ordenadas.   
Ele é indicado para listas pequenas ou parcialmente ordenadas. 

Mergesort:
O Merge Sort é um algoritmo de ordenação eficiente e geralmente indicado para listas grandes 
onde a estabilidade é necessária e o uso adicional de memória não é uma preocupação. 
Ele trabalha dividindo a lista em sublistas menores (utiliza a abordagem "dividir para conquistar"), 
ordenando-as recursivamente e, em seguida, combinando-as para produzir a lista ordenada final.

É mais eficiente do que o Bubblesort e o Insertion Sort 
para listas maiores.

Em resumo a respeito das três tecnicas de Algorítimos:
Esses algoritmos ajudam a organizar informações em ordem, mas cada um tem suas próprias 
características e eficiência. 
A escolha do algoritmo depende do tamanho dos dados e da eficiência desejada.